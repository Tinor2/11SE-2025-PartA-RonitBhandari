%%https://www.mermaidchart.com/app/projects/47094d90-774a-4ae6-93a1-2cb529246fc4/diagrams/99d1ef36-488e-4133-bc3e-c1d843bf7947/share/invite/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkb2N1bWVudElEIjoiOTlkMWVmMzYtNDg4ZS00MTMzLWJjM2UtYzFkODQzYmY3OTQ3IiwiYWNjZXNzIjoiRWRpdCIsImlhdCI6MTc0OTk0OTU5Mn0.uazLs_2hfcVtrlq28p2kLkWsVvMLcLUdjSNnbZE1bQA

classDiagram
    class Item {
        <<abstract>>
        -_name
        -_description
        +examine()*
    }

    class DiagnosticTool {
        +examine()
    }

    class EnergyCrystal {
        +examine()
    }

    class Location {
        -name
        -description
        -exits
        -has_tool
        -has_crystal
        -droid_present
        +__init__()
        +add_exit(direction, other_location)
        +describe()
        +remove_tool()
        +remove_crystal()
        +set_droid_present(flag)
    }

    class DamagedMaintenanceDroid {
        -blocking
        +__init__()
        +repair()
        +is_blocking()
    }

    class Player {
        -current_location
        -inventory: List[Item]
        -score: int
        -hazard_count: int
        +__init__(starting_location)
        +move(direction) str
        +take_item(item_name) str
        +use_item(item_name) str
        +get_item(item_name) Optional[Item]
        +get_inventory() List[str]
        +add_to_inventory(item) None
        +remove_from_inventory(item_name) None
    }

    class Command {
        <<abstract>>
        +execute(player, *args) CommandResult
        +get_help_text() str
    }

    class CommandResult {
        -success: bool
        -message: str
        -score_change: int
        -end_game: bool
        +__init__(success, message, score_change=0, end_game=False)
    }

    class CommandRegistry {
        -commands: Dict[str, Command]
        +__init__()
        +execute_command(command_str, player) CommandResult
    }

    class MoveCommand {
        +execute(player, direction) CommandResult
        +get_help_text() str
    }

    class TakeCommand {
        +execute(player, item_name) CommandResult
        +get_help_text() str
    }

    class UseCommand {
        +execute(player, item_name) CommandResult
        +get_help_text() str
    }

    class ExamineCommand {
        +execute(player, target) CommandResult
        +get_help_text() str
    }

    class InventoryCommand {
        +execute(player) CommandResult
        +get_help_text() str
    }

    class HelpCommand {
        -command_registry: CommandRegistry
        +__init__(command_registry)
        +execute(player) CommandResult
        +get_help_text() str
    }

    class QuitCommand {
        +execute(player) CommandResult
        +get_help_text() str
    }

    class GameController {
        -command_registry: CommandRegistry
        -player: Player
        +__init__()
        +start_game()
        +process_input(command) CommandResult
    }

    %% Item hierarchy
    Item <|-- DiagnosticTool
    Item <|-- EnergyCrystal
    
    %% Location relationships
    Location "1" *-- "0..1" DamagedMaintenanceDroid
    
    %% Player relationships
    Player "1" --> "1" Location
    Player "1" *-- "*" Item : inventory
    
    %% Command pattern
    Command <|-- MoveCommand
    Command <|-- TakeCommand
    Command <|-- UseCommand
    Command <|-- ExamineCommand
    Command <|-- InventoryCommand
    Command <|-- HelpCommand
    Command <|-- QuitCommand
    
    CommandRegistry "1" *-- "*" Command : commands
    
    %% Game controller relationships
    GameController "1" *-- "1" Player
    GameController "1" *-- "1" CommandRegistry
    GameController "1" *-- "*" Location
    
    %% Other relationships
    Player ..> DamagedMaintenanceDroid : uses
    Command ..> CommandResult : returns