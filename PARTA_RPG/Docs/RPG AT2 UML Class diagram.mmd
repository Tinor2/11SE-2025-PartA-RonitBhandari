%%https://www.mermaidchart.com/app/projects/47094d90-774a-4ae6-93a1-2cb529246fc4/diagrams/99d1ef36-488e-4133-bc3e-c1d843bf7947/share/invite/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkb2N1bWVudElEIjoiOTlkMWVmMzYtNDg4ZS00MTMzLWJjM2UtYzFkODQzYmY3OTQ3IiwiYWNjZXNzIjoiRWRpdCIsImlhdCI6MTc0OTk0OTU5Mn0.uazLs_2hfcVtrlq28p2kLkWsVvMLcLUdjSNnbZE1bQA

classDiagram
    %% Core Items
    class StationItem {
        <<abstract>>
        - _name
        - _description
        + examine()* str
    }

    class DiagnosticTool {
        + examine() str
    }

    class EnergyCrystal {
        + examine() str
    }

    StationItem <|-- DiagnosticTool
    StationItem <|-- EnergyCrystal

    %% Location
    class Location {
        - name
        - description
        - exits: Dict[str, Location]
        - has_tool: bool
        - has_crystal: bool
        - droid_present: bool
        + add_exit(direction, location)
        + remove_tool()
        + remove_crystal()
        + set_droid_present(flag)
        + describe() str
    }

    %% Droid
    class DamagedMaintenanceDroid {
        - blocking: bool
        + repair() None
        + is_blocking() bool
    }

    %% Player
    class Player {
        - current_location: Location
        - has_tool: bool
        - has_crystal: bool
        - score: int
        - hazard_count: int
        + move(direction) str
        + pick_up_tool() str
        + use_tool_on_droid() str
        + pick_up_crystal() str
        + get_status() str
    }

    %% Game Controller
    class GameController {
        - player: Player
        - locations: Dict[str, Location]
        - game_over: bool
        - game_won: bool
        - crystal_picked: bool
        + process_command(command) str
        + check_game_state()
    }

    %% Relationships
    Player "1" --> "1" Location
    Player "1" ..> "1" DamagedMaintenanceDroid
    Player "1" *-- "0..1" StationItem : carries

    GameController "1" *-- "1" Player
    GameController "1" *-- "*" Location



    class Location {
        -name
        -description
        -exits
        -has_tool
        -has_crystal
        -droid_present
        +__init__()
        +add_exit(direction, other_location)
        +describe()
        +remove_tool()
        +remove_crystal()
        +set_droid_present(flag)
    }

    class DamagedMaintenanceDroid {
        -blocking
        +__init__()
        +repair()
        +is_blocking()
    }

    class Player {
        -current_location
        -inventory: List[StationItem]
        -score: int
        -hazard_count: int
        +__init__(starting_location)
        +move(direction) str
        +take_item(item_name) str
        +use_item(item_name) str
        +get_item(item_name) Optional[StationItem]
        +get_inventory() List[str]
        +add_to_inventory(item) None
        +remove_from_inventory(item_name) None
    }

        <<abstract>>
        +execute(player, *args) CommandResult
        +get_help_text() str
    }

    class CommandResult {
        -success: bool
        -message: str
        -score_change: int
        -end_game: bool
        +__init__(success, message, score_change=0, end_game=False)
    }

    class CommandRegistry {
        -commands: Dict[str, Command]
        +__init__()
        +execute_command(command_str, player) CommandResult
        +get_help_text() str
    }

    class MoveCommand {
        +execute(player, direction) CommandResult
        +get_help_text() str
    }

    class PickupCommand {
        +execute(player, item_name) CommandResult
        +get_help_text() str
    }

    class UseCommand {
        +execute(player, item_name) CommandResult
        +get_help_text() str
    }


    class HelpCommand {
        -command_registry: CommandRegistry
        +__init__(command_registry)
        +execute(player, *args) CommandResult
        +get_help_text() str
    }

    class QuitCommand {
        +execute(player) CommandResult
        +get_help_text() str
    }

    class GameController {
        -command_registry: CommandRegistry
        -player: Player
        +__init__()
        +start_game()
        +process_input(command) CommandResult
    }

    %% StationItem hierarchy
    StationItem <|-- DiagnosticTool
    StationItem <|-- EnergyCrystal
    
    %% Location relationships
    Location "1" *-- "0..1" DamagedMaintenanceDroid
    
    %% Player relationships
    Player "1" --> "1" Location
    Player "1" *-- "*" StationItem : inventory
    
    %% Command pattern
    Command <|-- MoveCommand
    Command <|-- PickupCommand
    Command <|-- UseCommand
    Command <|-- HelpCommand
    Command <|-- QuitCommand
    CommandRegistry "1" *-- "*" Command : commands
    
    %% Game controller relationships
    GameController "1" *-- "1" Player
    GameController "1" *-- "1" CommandRegistry
    GameController "1" *-- "*" Location
    
    %% Other relationships
    Player ..> DamagedMaintenanceDroid : uses
    Command ..> CommandResult : returns